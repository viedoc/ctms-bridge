{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.17.1.54307",
      "templateHash": "9042476247354107809"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Resource group location"
      }
    },
    "createKeyVaultSecrets": {
      "type": "bool",
      "defaultValue": false
    },
    "ViedocApiClientId": {
      "type": "securestring",
      "defaultValue": "92ac892a-f27c-4931-b9bc-1f4f66e30743"
    },
    "ViedocApiClientSecret": {
      "type": "securestring",
      "defaultValue": "bV_tWwfjrVgdaOHm8jTO9aSZtisrkTw8u2kokfZrxFw"
    },
    "ViedocApiUrl": {
      "type": "string",
      "defaultValue": "https://externaltest4api.viedoc.net"
    },
    "ViedocApiTokenUrl": {
      "type": "string",
      "defaultValue": "https://externaltest4sts.viedoc.net/connect/token"
    },
    "secret1Name": {
      "type": "string",
      "defaultValue": "BsiClientId"
    },
    "secret1Value": {
      "type": "securestring",
      "defaultValue": "ctms_api_user"
    },
    "secret2Name": {
      "type": "string",
      "defaultValue": "BsiClientSecret"
    },
    "secret2Value": {
      "type": "securestring",
      "defaultValue": "62lmGf$gfK!a27Fmgd"
    }
  },
  "variables": {
    "random": "[uniqueString(subscription().id)]",
    "prefix": "viedoc-ctms-bridge-",
    "defaultName": "[format('{0}{1}', variables('prefix'), variables('random'))]",
    "storageAccountName": "[take(toLower(replace(format('{0}', variables('defaultName')), '-', '')), 23)]",
    "fileShareName": "data",
    "workspaceName": "[format('{0}-log-analytics', variables('defaultName'))]",
    "applicationInsightsName": "[format('{0}-insights', variables('defaultName'))]",
    "keyVaultName": "[format('v-{0}-vault', variables('random'))]",
    "appServicePlanName": "[format('{0}-farm', variables('defaultName'))]",
    "functionAppName": "[variables('defaultName')]",
    "viedocApiClientIdKvSecretName": "viedoc-api-client-id",
    "viedocClientSecretKvSecretName": "viedoc-api-client-secret",
    "userSecret1Name": "[format('UserSecret__{0}', parameters('secret1Name'))]",
    "userSecret1KvName": "[toLower(replace(variables('userSecret1Name'), '__', '-'))]",
    "userSecret2Name": "[format('UserSecret__{0}', parameters('secret2Name'))]",
    "userSecret2KvName": "[toLower(replace(variables('userSecret2Name'), '__', '-'))]",
    "alwaysOn": true,
    "KEY_VAULT_SECRETS_USER_ROLE_GUID": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '4633458b-17de-408a-b874-0445c86b69e6')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2022-09-01",
      "name": "[variables('storageAccountName')]",
      "location": "[parameters('location')]",
      "kind": "StorageV2",
      "sku": {
        "name": "Standard_LRS"
      },
      "properties": {
        "accessTier": "Hot",
        "minimumTlsVersion": "TLS1_2",
        "allowBlobPublicAccess": false,
        "supportsHttpsTrafficOnly": true,
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [],
          "ipRules": [],
          "defaultAction": "Allow"
        },
        "encryption": {
          "services": {
            "file": {
              "keyType": "Account",
              "enabled": true
            },
            "blob": {
              "keyType": "Account",
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}/{1}', variables('storageAccountName'), 'default')]",
      "properties": {
        "deleteRetentionPolicy": {
          "allowPermanentDelete": false,
          "enabled": false
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/fileServices",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}/{1}', variables('storageAccountName'), 'default')]",
      "properties": {
        "shareDeleteRetentionPolicy": {
          "enabled": true,
          "days": 7
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}/{1}/{2}', variables('storageAccountName'), 'default', variables('fileShareName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/fileServices', variables('storageAccountName'), 'default')]"
      ]
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2020-10-01",
      "name": "[variables('workspaceName')]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "name": "PerGB2018"
        }
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[variables('applicationInsightsName')]",
      "location": "[parameters('location')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "RetentionInDays": 90,
        "IngestionMode": "LogAnalytics",
        "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('workspaceName'))]",
        "publicNetworkAccessForIngestion": "Enabled",
        "publicNetworkAccessForQuery": "Enabled"
      },
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('workspaceName'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2021-11-01-preview",
      "name": "[variables('keyVaultName')]",
      "location": "[parameters('location')]",
      "properties": {
        "enabledForDeployment": false,
        "enabledForDiskEncryption": false,
        "enabledForTemplateDeployment": true,
        "tenantId": "[subscription().tenantId]",
        "enableSoftDelete": true,
        "softDeleteRetentionInDays": 7,
        "enableRbacAuthorization": true,
        "accessPolicies": [],
        "sku": {
          "name": "standard",
          "family": "A"
        },
        "networkAcls": {
          "defaultAction": "Allow",
          "bypass": "AzureServices"
        }
      }
    },
    {
      "condition": "[parameters('createKeyVaultSecrets')]",
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2021-11-01-preview",
      "name": "[format('{0}/{1}', variables('keyVaultName'), variables('viedocApiClientIdKvSecretName'))]",
      "properties": {
        "value": "[parameters('ViedocApiClientId')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
      ]
    },
    {
      "condition": "[parameters('createKeyVaultSecrets')]",
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2021-11-01-preview",
      "name": "[format('{0}/{1}', variables('keyVaultName'), variables('viedocClientSecretKvSecretName'))]",
      "properties": {
        "value": "[parameters('ViedocApiClientSecret')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
      ]
    },
    {
      "condition": "[parameters('createKeyVaultSecrets')]",
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2021-11-01-preview",
      "name": "[format('{0}/{1}', variables('keyVaultName'), variables('userSecret1KvName'))]",
      "properties": {
        "value": "[parameters('secret1Value')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
      ]
    },
    {
      "condition": "[parameters('createKeyVaultSecrets')]",
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2021-11-01-preview",
      "name": "[format('{0}/{1}', variables('keyVaultName'), variables('userSecret2KvName'))]",
      "properties": {
        "value": "[parameters('secret2Value')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2022-09-01",
      "name": "[variables('appServicePlanName')]",
      "location": "[parameters('location')]",
      "kind": "linux",
      "properties": {
        "reserved": true
      },
      "sku": {
        "name": "B1"
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2022-09-01",
      "name": "[variables('functionAppName')]",
      "location": "[parameters('location')]",
      "kind": "functionapplinux",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "enabled": true,
        "reserved": true,
        "isXenon": false,
        "hyperV": false,
        "vnetRouteAllEnabled": false,
        "vnetImagePullEnabled": false,
        "vnetContentShareEnabled": false,
        "siteConfig": {
          "linuxFxVersion": "DOTNET-ISOLATED|7.0",
          "numberOfWorkers": 1,
          "acrUseManagedIdentityCreds": false,
          "alwaysOn": "[variables('alwaysOn')]",
          "http20Enabled": true,
          "functionAppScaleLimit": 2,
          "minimumElasticInstanceCount": 0,
          "appSettings": [
            {
              "name": "[variables('userSecret1Name')]",
              "value": "[format('@Microsoft.KeyVault(SecretUri={0}/{1}}})', reference(resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName')), '2021-11-01-preview').vaultUri, variables('userSecret1KvName'))]"
            },
            {
              "name": "[variables('userSecret2Name')]",
              "value": "[format('@Microsoft.KeyVault(SecretUri={0}/{1})', reference(resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName')), '2021-11-01-preview').vaultUri, variables('userSecret2KvName'))]"
            },
            {
              "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2020-02-02').ConnectionString]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', variables('storageAccountName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2022-09-01').keys[1].value)]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~4"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "dotnet-isolated"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', variables('storageAccountName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2022-09-01').keys[1].value)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[variables('functionAppName')]"
            },
            {
              "name": "WEBSITE_MOUNT_ENABLED",
              "value": "1"
            },
            {
              "name": "WEBSITE_RUN_FROM_PACKAGE",
              "value": "https://github.com/viedoc/ctms-bridge/releases/download/0.0.1/viedoc-ctms-bridge-20230507093712.zip"
            },
            {
              "name": "DataBridge__AppSettingsFile",
              "value": "appsettings.json"
            },
            {
              "name": "DataBridge__BasePath",
              "value": "/data"
            },
            {
              "name": "DataBridge__ExportConsoleExecutable",
              "value": "Viedoc.Export.Console"
            },
            {
              "name": "DataBridge__ExportConsoleExecutableFolder",
              "value": ""
            },
            {
              "name": "DataBridge__MappingsFolder",
              "value": ""
            },
            {
              "name": "DataBridge__SyncInterval",
              "value": "0 */20 * * * *"
            },
            {
              "name": "ViedocExportConsole__ClientId",
              "value": "[format('@Microsoft.KeyVault(SecretUri={0}/{1})', reference(resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName')), '2021-11-01-preview').vaultUri, variables('viedocApiClientIdKvSecretName'))]"
            },
            {
              "name": "ViedocExportConsole__ClientSecret",
              "value": "[format('@Microsoft.KeyVault(SecretUri={0}/{1})', reference(resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName')), '2021-11-01-preview').vaultUri, variables('viedocApiClientIdKvSecretName'))]"
            },
            {
              "name": "ViedocExportConsole__ApiUrl",
              "value": "[parameters('ViedocApiUrl')]"
            },
            {
              "name": "ViedocExportConsole__TokenUrl",
              "value": "[parameters('ViedocApiTokenUrl')]"
            }
          ]
        },
        "scmSiteAlsoStopped": false,
        "clientAffinityEnabled": false,
        "clientCertEnabled": false,
        "clientCertMode": "Required",
        "hostNamesDisabled": false,
        "httpsOnly": true,
        "redundancyMode": "None",
        "storageAccountRequired": false,
        "keyVaultReferenceIdentity": "SystemAssigned"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', variables('applicationInsightsName'))]",
        "[resourceId('Microsoft.KeyVault/vaults/secrets', variables('keyVaultName'), variables('viedocApiClientIdKvSecretName'))]",
        "[resourceId('Microsoft.KeyVault/vaults/secrets', variables('keyVaultName'), variables('viedocClientSecretKvSecretName'))]",
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]",
        "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.KeyVault/vaults/secrets', variables('keyVaultName'), variables('userSecret1KvName'))]",
        "[resourceId('Microsoft.KeyVault/vaults/secrets', variables('keyVaultName'), variables('userSecret2KvName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}/{1}', variables('functionAppName'), 'web')]",
      "properties": {
        "linuxFxVersion": "DOTNET-ISOLATED|7.0",
        "numberOfWorkers": 1,
        "netFrameworkVersion": "v4.0",
        "requestTracingEnabled": false,
        "remoteDebuggingEnabled": false,
        "httpLoggingEnabled": false,
        "detailedErrorLoggingEnabled": false,
        "use32BitWorkerProcess": false,
        "webSocketsEnabled": false,
        "alwaysOn": "[variables('alwaysOn')]",
        "loadBalancing": "LeastRequests",
        "autoHealEnabled": false,
        "vnetRouteAllEnabled": false,
        "vnetPrivatePortsCount": 0,
        "localMySqlEnabled": false,
        "scmIpSecurityRestrictionsUseMain": false,
        "http20Enabled": true,
        "minTlsVersion": "1.2",
        "scmMinTlsVersion": "1.2",
        "ftpsState": "Disabled",
        "preWarmedInstanceCount": 0,
        "functionAppScaleLimit": 2,
        "functionsRuntimeScaleMonitoringEnabled": false,
        "minimumElasticInstanceCount": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2021-01-15",
      "name": "[format('{0}/{1}', variables('functionAppName'), 'azurestorageaccounts')]",
      "properties": {
        "[format('{0}', variables('fileShareName'))]": {
          "type": "AzureFiles",
          "shareName": "[variables('fileShareName')]",
          "mountPath": "/data",
          "accountName": "[variables('storageAccountName')]",
          "accessKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2022-09-01').keys[1].value]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "scope": "[format('Microsoft.KeyVault/vaults/{0}', variables('keyVaultName'))]",
      "name": "[guid('SecretsUser', variables('functionAppName'))]",
      "properties": {
        "principalId": "[reference(resourceId('Microsoft.Web/sites', variables('functionAppName')), '2022-09-01', 'full').identity.principalId]",
        "roleDefinitionId": "[variables('KEY_VAULT_SECRETS_USER_ROLE_GUID')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]",
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deploymentScripts",
      "apiVersion": "2020-10-01",
      "name": "deployscript-upload-blob",
      "location": "[parameters('location')]",
      "kind": "AzurePowerShell",
      "properties": {
        "azPowerShellVersion": "7.0",
        "timeout": "PT5M",
        "retentionInterval": "PT1H",
        "cleanupPreference": "OnSuccess",
        "environmentVariables": [
          {
            "name": "FILESHARE_URL",
            "secureValue": "[format('https://{0}.file.{1}/{2}', variables('storageAccountName'), environment().suffixes.storage, variables('fileShareName'))]"
          },
          {
            "name": "AZURE_STORAGE_KEY",
            "secureValue": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2022-09-01').keys[1].value]"
          },
          {
            "name": "AZURE_STORAGE_ACCOUNT",
            "secureValue": "[variables('storageAccountName')]"
          },
          {
            "name": "SHARE_NAME",
            "secureValue": "[variables('fileShareName')]"
          }
        ],
        "scriptContent": "    Invoke-WebRequest \"https://github.com/viedoc/Viedoc.Export.Console/releases/download/0.0.1/viedoc.export.console-linux-x64.zip\" -OutFile \"viedoc.export.console.zip\"\r\n    Expand-Archive -Path \"viedoc.export.console.zip\" -DestinationPath \".\" -Force\r\n    curl -sL https://aka.ms/InstallAzureCLIDeb | bash\r\n    az version\r\n    az storage file upload --source \"./Viedoc.Export.Console\" --share-name \"$($env:SHARE_NAME)\" \r\n    Write-Host \"Done\"\r\n    "
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/fileServices/shares', variables('storageAccountName'), 'default', variables('fileShareName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ]
    }
  ],
  "outputs": {
    "storageAccountName": {
      "type": "string",
      "value": "[variables('storageAccountName')]"
    },
    "storageAccountId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
    },
    "url": {
      "type": "string",
      "value": "[format('https://{0}', reference(resourceId('Microsoft.Web/sites', variables('functionAppName')), '2022-09-01').defaultHostName)]"
    }
  }
}