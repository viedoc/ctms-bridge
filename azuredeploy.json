{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.16.2.56959",
      "templateHash": "823196971878595463"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[deployment().location]",
      "metadata": {
        "description": "Location for the deployment"
      }
    }
  },
  "variables": {
    "random": "[uniqueString(subscription().id)]",
    "prefix": "viedoc-ctms-bridge-",
    "resourceGroupName": "[format('{0}{1}', variables('prefix'), variables('random'))]",
    "defaultName": "[format('{0}{1}', variables('prefix'), variables('random'))]",
    "storageAccountName": "[take(toLower(replace(format('{0}', variables('defaultName')), '-', '')), 23)]",
    "fileShareName": "data",
    "workspaceName": "[format('{0}-log-analytics', variables('defaultName'))]",
    "applicationInsightsName": "[format('{0}-insights', variables('defaultName'))]",
    "appServicePlanName": "[format('{0}-farm', variables('defaultName'))]",
    "functionAppName": "[variables('defaultName')]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2021-01-01",
      "name": "[variables('resourceGroupName')]",
      "location": "[parameters('location')]"
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}infrastructure-module', variables('prefix'))]",
      "resourceGroup": "[variables('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "storageAccountName": {
            "value": "[variables('storageAccountName')]"
          },
          "fileShareName": {
            "value": "[variables('fileShareName')]"
          },
          "workspaceName": {
            "value": "[variables('workspaceName')]"
          },
          "applicationInsightsName": {
            "value": "[variables('applicationInsightsName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "appServicePlanName": {
            "value": "[variables('appServicePlanName')]"
          },
          "functionAppName": {
            "value": "[variables('functionAppName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.16.2.56959",
              "templateHash": "12620298532761410071"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "storageAccountName": {
              "type": "string"
            },
            "fileShareName": {
              "type": "string"
            },
            "workspaceName": {
              "type": "string"
            },
            "applicationInsightsName": {
              "type": "string"
            },
            "appServicePlanName": {
              "type": "string"
            },
            "functionAppName": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2022-09-01",
              "name": "[parameters('storageAccountName')]",
              "location": "[parameters('location')]",
              "kind": "StorageV2",
              "sku": {
                "name": "Standard_LRS"
              },
              "properties": {
                "accessTier": "Hot",
                "minimumTlsVersion": "TLS1_2",
                "allowBlobPublicAccess": false,
                "supportsHttpsTrafficOnly": true,
                "networkAcls": {
                  "bypass": "AzureServices",
                  "virtualNetworkRules": [],
                  "ipRules": [],
                  "defaultAction": "Allow"
                },
                "encryption": {
                  "services": {
                    "file": {
                      "keyType": "Account",
                      "enabled": true
                    },
                    "blob": {
                      "keyType": "Account",
                      "enabled": true
                    }
                  },
                  "keySource": "Microsoft.Storage"
                }
              }
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}/{1}', parameters('storageAccountName'), 'default')]",
              "properties": {
                "deleteRetentionPolicy": {
                  "allowPermanentDelete": false,
                  "enabled": false
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/fileServices",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}/{1}', parameters('storageAccountName'), 'default')]",
              "properties": {
                "shareDeleteRetentionPolicy": {
                  "enabled": true,
                  "days": 7
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}/{1}/{2}', parameters('storageAccountName'), 'default', parameters('fileShareName'))]",
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/fileServices', parameters('storageAccountName'), 'default')]"
              ]
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces",
              "apiVersion": "2020-10-01",
              "name": "[parameters('workspaceName')]",
              "location": "[parameters('location')]",
              "properties": {
                "sku": {
                  "name": "PerGB2018"
                }
              }
            },
            {
              "type": "Microsoft.Insights/components",
              "apiVersion": "2020-02-02",
              "name": "[parameters('applicationInsightsName')]",
              "location": "[parameters('location')]",
              "kind": "web",
              "properties": {
                "Application_Type": "web",
                "RetentionInDays": 90,
                "IngestionMode": "LogAnalytics",
                "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaceName'))]",
                "publicNetworkAccessForIngestion": "Enabled",
                "publicNetworkAccessForQuery": "Enabled"
              },
              "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaceName'))]"
              ]
            },
            {
              "type": "Microsoft.Web/serverfarms",
              "apiVersion": "2022-09-01",
              "name": "[parameters('appServicePlanName')]",
              "location": "[parameters('location')]",
              "kind": "linux",
              "properties": {
                "reserved": true
              },
              "sku": {
                "name": "B1"
              }
            },
            {
              "type": "Microsoft.Web/sites",
              "apiVersion": "2022-09-01",
              "name": "[parameters('functionAppName')]",
              "location": "[parameters('location')]",
              "kind": "functionapplinux",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]",
                "enabled": true,
                "reserved": true,
                "isXenon": false,
                "hyperV": false,
                "vnetRouteAllEnabled": false,
                "vnetImagePullEnabled": false,
                "vnetContentShareEnabled": false,
                "siteConfig": {
                  "numberOfWorkers": 1,
                  "acrUseManagedIdentityCreds": false,
                  "alwaysOn": false,
                  "http20Enabled": true,
                  "functionAppScaleLimit": 2,
                  "minimumElasticInstanceCount": 0,
                  "appSettings": [
                    {
                      "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
                      "value": "[reference(resourceId('Microsoft.Insights/components', parameters('applicationInsightsName')), '2020-02-02').ConnectionString]"
                    },
                    {
                      "name": "AzureWebJobsStorage",
                      "value": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2022-09-01').keys[1].value]"
                    },
                    {
                      "name": "FUNCTIONS_EXTENSION_VERSION",
                      "value": "~4"
                    },
                    {
                      "name": "FUNCTIONS_WORKER_RUNTIME",
                      "value": "dotnet-isolated"
                    },
                    {
                      "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                      "value": "DefaultEndpointsProtocol=https;AccountName=viedocctmsbridge5ivno35;AccountKey=yrmHY2iAbrICBEPibIcKc1Geow5f7c+y7m7zet0K+z+qsABbQmIJd7noloD+ucuovBgjtuMfEslA+AStNez3UA==;EndpointSuffix=core.windows.net"
                    },
                    {
                      "name": "WEBSITE_CONTENTSHARE",
                      "value": "[parameters('functionAppName')]"
                    },
                    {
                      "name": "WEBSITE_MOUNT_ENABLED",
                      "value": "1"
                    },
                    {
                      "name": "WEBSITE_RUN_FROM_PACKAGE",
                      "value": "https://viedocctmsbridge5ivno35.blob.core.windows.net/releases/viedoc-ctms-bridge-20230430080635.zip?sp=r&st=2023-04-30T06:20:25Z&se=2023-05-02T14:20:25Z&spr=https&sv=2021-12-02&sr=b&sig=ke0Z9HXSMMsr4X%2BfSN3HF2VMjtKNUSgmx42zNonWgEI%3D"
                    },
                    {
                      "name": "AppSettingsFile",
                      "value": "appsettings.json"
                    },
                    {
                      "name": "ExportBasePath",
                      "value": "/data"
                    },
                    {
                      "name": "ExportConsoleExecutable",
                      "value": "Viedoc.Export.Console"
                    },
                    {
                      "name": "ExportConsoleExecutableFolder",
                      "value": "console"
                    },
                    {
                      "name": "MappingsFolder",
                      "value": "mappings"
                    }
                  ]
                },
                "scmSiteAlsoStopped": false,
                "clientAffinityEnabled": false,
                "clientCertEnabled": false,
                "clientCertMode": "Required",
                "hostNamesDisabled": false,
                "httpsOnly": true,
                "redundancyMode": "None",
                "storageAccountRequired": false,
                "keyVaultReferenceIdentity": "SystemAssigned"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Insights/components', parameters('applicationInsightsName'))]",
                "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
              ]
            },
            {
              "type": "Microsoft.Web/sites/config",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}/{1}', parameters('functionAppName'), 'web')]",
              "properties": {
                "numberOfWorkers": 1,
                "netFrameworkVersion": "v4.0",
                "requestTracingEnabled": false,
                "remoteDebuggingEnabled": false,
                "httpLoggingEnabled": false,
                "detailedErrorLoggingEnabled": false,
                "use32BitWorkerProcess": false,
                "webSocketsEnabled": false,
                "alwaysOn": false,
                "loadBalancing": "LeastRequests",
                "autoHealEnabled": false,
                "vnetRouteAllEnabled": false,
                "vnetPrivatePortsCount": 0,
                "localMySqlEnabled": false,
                "scmIpSecurityRestrictionsUseMain": false,
                "http20Enabled": true,
                "minTlsVersion": "1.2",
                "scmMinTlsVersion": "1.2",
                "ftpsState": "Disabled",
                "preWarmedInstanceCount": 0,
                "functionAppScaleLimit": 2,
                "functionsRuntimeScaleMonitoringEnabled": false,
                "minimumElasticInstanceCount": 0
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]"
              ]
            },
            {
              "type": "Microsoft.Web/sites/config",
              "apiVersion": "2021-01-15",
              "name": "[format('{0}/{1}', parameters('functionAppName'), 'azurestorageaccounts')]",
              "properties": {
                "[format('{0}', parameters('fileShareName'))]": {
                  "type": "AzureFiles",
                  "shareName": "[parameters('fileShareName')]",
                  "mountPath": "/data",
                  "accountName": "[parameters('storageAccountName')]",
                  "accessKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2022-09-01').keys[1].value]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
              ]
            }
          ],
          "outputs": {
            "storageAccountName": {
              "type": "string",
              "value": "[parameters('storageAccountName')]"
            },
            "storageAccountId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
            },
            "defaultHostName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Web/sites', parameters('functionAppName')), '2022-09-01').defaultHostName]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('resourceGroupName'))]"
      ]
    }
  ],
  "outputs": {
    "resourceGroupName": {
      "type": "string",
      "value": "[variables('resourceGroupName')]"
    },
    "storageAccountName": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('{0}infrastructure-module', variables('prefix'))), '2022-09-01').outputs.storageAccountName.value]"
    },
    "storageAccountId": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('{0}infrastructure-module', variables('prefix'))), '2022-09-01').outputs.storageAccountId.value]"
    },
    "url": {
      "type": "string",
      "value": "[format('https://{0}', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('{0}infrastructure-module', variables('prefix'))), '2022-09-01').outputs.defaultHostName.value)]"
    }
  }
}